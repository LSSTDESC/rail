[project]
name = "pz-rail"
requires-python = ">=3.9"
license = {file = "LICENSE"}
readme = "README.md"
authors = [
    { name = "LSST Dark Energy Science Collaboration (DESC)", email = "later@later.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
]
dynamic = ["version"]

dependencies = [
    "pz-rail-base",
]

# On a mac, install optional dependencies with `pip install '.[dev]'` (include the single quotes)
[project.optional-dependencies]
algos = [
    "pz-rail-pipelines[full]",
]

nb = [
    "pz-rail-pipelines[full]",
    "jupyter",
    "seaborn",
]

dev = [
    "pz-rail-pipelines[full]",
    "jupyter",
    "seaborn",
    "corner",
    "pandas",
    "h5py",
    "matplotlib",
    "coverage",
    "pytest",
    "pytest-cov", # Used to report total code coverage
    "pre-commit", # Used to run checks before finalizing a git commit
    "pylint", # Used for static linting of files
]

docs = [
    "nbsphinx",
    "sphinx==6.1.3", # Used to automatically generate documentation
    "sphinx_rtd_theme==1.2.0", # Used to render documentation
    "sphinx-autoapi==2.0.1", # Used to automatically generate api documentation    
    "sphinx-tabs", # Used to create tabbed content within the docs 
]

[build-system]
requires = [
    "setuptools>=62", # Used to build and package the Python project
    "setuptools_scm>=6.2", # Gets release version from git. Makes it available programmatically
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/rail/hub/_version.py"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
addopts = [
    "--cov=rail",
    "--cov-report=html"
]

[tool.pylint]
disable = [
    "abstract-method",
    "invalid-name",
    "too-many-statements",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "too-few-public-methods",
    "duplicate-code",
    "use-dict-literal",
    "broad-exception-caught",
]
max-line-length = 110
max-locals = 50
max-branches = 25
max-public-methods = 50
